diff --git a/src/mumble/ASIOInput.cpp b/src/mumble/ASIOInput.cpp
index 72f25764b..e53b20aad 100644
--- a/src/mumble/ASIOInput.cpp
+++ b/src/mumble/ASIOInput.cpp
@@ -200,7 +200,7 @@ void ASIOConfig::on_qpbQuery_clicked() {
 			SleepEx(10, false);
 
 			ASIOSampleRate srate = 0.0;
-			iasio->setSampleRate(48000.0);
+			iasio->setSampleRate(44100.0);
 			iasio->getSampleRate(&srate);
 			SleepEx(10, false);
 
diff --git a/src/mumble/LookConfig.cpp b/src/mumble/LookConfig.cpp
index dac067f81..9ad5113e5 100644
--- a/src/mumble/LookConfig.cpp
+++ b/src/mumble/LookConfig.cpp
@@ -97,7 +97,8 @@ void LookConfig::reloadThemes(const boost::optional<ThemeInfo::StyleInfo> config
 	int selectedThemeEntry = 0;
 	
 	qcbTheme->clear();
-	qcbTheme->addItem(tr("None"));
+    /* Only allow PR's theme or a user defined one, default is removed due to compatability issues
+	qcbTheme->addItem(tr("None")); */
 	for (ThemeMap::const_iterator theme = themes.begin();
 	     theme != themes.end();
 	     ++theme) {
diff --git a/src/mumble/Themes.cpp b/src/mumble/Themes.cpp
index e63fac255..8a03de3be 100644
--- a/src/mumble/Themes.cpp
+++ b/src/mumble/Themes.cpp
@@ -11,18 +11,29 @@
 #include "MumbleApplication.h"
 
 boost::optional<ThemeInfo::StyleInfo> Themes::getConfiguredStyle(const Settings &settings) {
-	if (settings.themeName.isEmpty() && settings.themeStyleName.isEmpty()) {
-			return boost::none;
-	}
-
 	const ThemeMap themes = getThemes();
-	ThemeMap::const_iterator themeIt = themes.find(settings.themeName);
+    ThemeMap::const_iterator themeIt;
+    ThemeInfo::StylesMap::const_iterator styleIt;
+
+    /* Set PRMumble as the default theme if there's no theme entry in the registry */
+	if (settings.themeName.isEmpty()) {
+	    themeIt = themes.find(QLatin1String("PRMumble"));
+    }
+    else {
+	    themeIt = themes.find(settings.themeName);
+    }
 	if (themeIt == themes.end()) {
 		qWarning() << "Could not find configured theme" << settings.themeName;
 		return boost::none;
 	}
 	
-	ThemeInfo::StylesMap::const_iterator styleIt = themeIt->styles.find(settings.themeStyleName);
+    /* Set Reality as the default theme style if there's no theme style entry in the registry */
+	if (settings.themeStyleName.isEmpty()) {
+        styleIt = themeIt->styles.find(QLatin1String("Reality"));
+    }
+    else {
+        styleIt = themeIt->styles.find(settings.themeStyleName);
+    }
 	if (styleIt == themeIt->styles.end()) {
 		qWarning() << "Configured theme" << settings.themeName << "does not have configured style" << settings.themeStyleName;
 		return boost::none;
diff --git a/src/mumble/WASAPI.cpp b/src/mumble/WASAPI.cpp
index d0056feda..69c01437c 100644
--- a/src/mumble/WASAPI.cpp
+++ b/src/mumble/WASAPI.cpp
@@ -423,7 +423,7 @@ void WASAPIInput::run() {
 			wfe.Format.cbSize = 0;
 			wfe.Format.wFormatTag = WAVE_FORMAT_PCM;
 			wfe.Format.nChannels = channels;
-			wfe.Format.nSamplesPerSec = 48000;
+			wfe.Format.nSamplesPerSec = 44100;
 			wfe.Format.wBitsPerSample = 16;
 			wfe.Format.nBlockAlign = wfe.Format.nChannels * wfe.Format.wBitsPerSample / 8;
 			wfe.Format.nAvgBytesPerSec = wfe.Format.nBlockAlign * wfe.Format.nSamplesPerSec;
@@ -900,7 +900,7 @@ void WASAPIOutput::run() {
 		} else {
 			pwfx->wFormatTag = WAVE_FORMAT_PCM;
 		}
-		pwfx->nSamplesPerSec = 48000;
+		pwfx->nSamplesPerSec = 44100;
 		pwfx->wBitsPerSample = 16;
 		pwfx->nBlockAlign = pwfx->nChannels * pwfx->wBitsPerSample / 8;
 		pwfx->nAvgBytesPerSec = pwfx->nBlockAlign * pwfx->nSamplesPerSec;
diff --git a/src/mumble/mumble.rc b/src/mumble/mumble.rc
index 369d9033c..9b1965a81 100644
--- a/src/mumble/mumble.rc
+++ b/src/mumble/mumble.rc
@@ -5,7 +5,7 @@
 
 #include <winver.h>
 
-IDI_ICON1               ICON    DISCARDABLE     "..\\..\\icons\\reality\\mumble.ico"
+IDI_ICON1               ICON    DISCARDABLE     "../../icons/reality/mumble.ico"
 
 #ifndef DEBUG
 #define VER_DEBUG                   0L
diff --git a/src/murmur/murmur.rc b/src/murmur/murmur.rc
index 5e76fd7a1..37f4bf310 100644
--- a/src/murmur/murmur.rc
+++ b/src/murmur/murmur.rc
@@ -5,7 +5,7 @@
 
 #include <winver.h>
 
-IDI_ICON1               ICON    DISCARDABLE     "..\\..\\icons\\reality\\murmur.ico"
+IDI_ICON1               ICON    DISCARDABLE     "../../icons/reality/murmur.ico"
 
 #ifndef DEBUG
 #define VER_DEBUG                   0L
diff --git a/themes/MumbleTheme.qrc b/themes/MumbleTheme.qrc
index b522c1537..5805c33ef 100644
--- a/themes/MumbleTheme.qrc
+++ b/themes/MumbleTheme.qrc
@@ -61,8 +61,8 @@
     <file alias="controls/arrow_up_disabled.svg">Mumble/controls/arrow_up_disabled.svg</file>
     <file alias="controls/branch_closed.svg">Mumble/controls/branch_closed.svg</file>
     <file alias="controls/branch_open.svg">Mumble/controls/branch_open.svg</file>
-    <file alias="controls/checkbox_check_dark.svg">Mumble/controls/checkbox_check_dark.svg</file>
-    <file alias="controls/checkbox_check_disabled.svg">Mumble/controls/checkbox_check_disabled.svg</file>
+    <file alias="controls/checkbox_check_dark.svg">reality/checkbox-checked.svg</file>
+    <file alias="controls/checkbox_check_disabled.svg">reality/checkbox-indeterminate.svg</file>
     <file alias="controls/checkbox_check_lite.svg">Mumble/controls/checkbox_check_lite.svg</file>
     <file alias="controls/handle_horizontal.svg">Mumble/controls/handle_horizontal.svg</file>
     <file alias="controls/handle_vertical.svg">Mumble/controls/handle_vertical.svg</file>
